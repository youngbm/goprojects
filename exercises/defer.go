package main

import (
	"fmt"
	"sync"
)

type rect struct {
	length float32
	width  float32
}

func (r rect) area(n int, wg *sync.WaitGroup) float32 {
	defer wg.Done()
	if r.length < 0 || r.width < 0 {
		fmt.Println("lenth or width  is lt 0", r.length, r.width)
		return -1
	} else {
		fmt.Println("are is ", n, r.length*r.width)
	}
	return 0.0
}

func main() {
	fmt.Println("main")
	var wg sync.WaitGroup
	rects := []rect{
		{1.0, 1.5},
		{2.0, 2.5},
		{4.0, 4.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{2.0, 2.5},
		{2.0, 2.5},
		{2.0, 2.5},
		{2.0, 2.5},
		{2.0, 2.5},
		{2.0, 2.5},
		{2.0, 2.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{2.0, 2.5},
		{2.0, 2.5},
		{2.0, 2.5},
		{2.0, 2.5},
		{2.0, 2.5},
		{2.0, 2.5},
		{2.0, 2.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{2.0, 2.5},
		{2.0, 2.5},
		{2.0, 2.5},
		{2.0, 2.5},
		{2.0, 2.5},
		{2.0, 2.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{2.0, 2.5},
		{2.0, 2.5},
		{2.0, 2.5},
		{2.0, 2.5},
		{2.0, 2.5},
		{2.0, 2.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{3.0, 3.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{4.0, 4.5},
		{4.0, 4.5},
	}
	fmt.Printf("%d\n", len(rects))
	for k, v := range rects {
		wg.Add(1)
		go v.area(k, &wg)
	}
	wg.Wait()
}
